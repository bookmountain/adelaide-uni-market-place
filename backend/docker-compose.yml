version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.name=marketplace
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
      elasticsearch:
        condition: service_started
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://+:8080
      Postgres__ConnectionString: Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      Redis__ConnectionString: redis:6379
      RabbitMq__Host: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      Elastic__Uri: http://elasticsearch:9200
      Auth__AppJwtIssuer: ${AUTH_APP_JWT_ISSUER}
      Auth__AppJwtSigningKey: ${AUTH_APP_JWT_SIGNING_KEY}
      Auth__AllowedEmailDomain: ${AUTH_ALLOWED_EMAIL_DOMAIN}
      Auth__ActivationBaseUrl: ${AUTH_ACTIVATION_BASE_URL}
      Email__SenderAddress: ${EMAIL_SENDER_ADDRESS}
      Email__SenderName: ${EMAIL_SENDER_NAME}
      Email__Host: ${EMAIL_HOST}
      Email__Port: ${EMAIL_PORT}
      Email__UseStartTls: ${EMAIL_USE_STARTTLS}
      Email__Username: ${EMAIL_USERNAME}
      Email__Password: ${EMAIL_PASSWORD}
      R2__AccountId: ${R2_ACCOUNT_ID}
      R2__AccessKeyId: ${R2_ACCESS_KEY_ID}
      R2__SecretAccessKey: ${R2_SECRET_ACCESS_KEY}
      R2__Bucket: ${R2_BUCKET}
      R2__Endpoint: ${R2_ENDPOINT}
      R2__PublicBaseUrl: ${R2_PUBLIC_BASE_URL}
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  redis_data:
  elastic_data:
